import pandas as pd

def preprocess_data(df):
    """
    공공데이터 기반 소비지출 데이터 전처리 함수

    주요 기능:
    - 컬럼명 통일 및 결측/이상치/음수/중복 처리
    - 카테고리 매핑 (공백 제거 및 타입 강제 변환)
    - 카테고리별 통계 추출
    """
    # 1. 컬럼명 통일 및 결측/이상치/음수/중복 처리
    df = df.rename(columns={
        'ta_ymd': 'Date',
        'amt': 'AvgAmount',
        'card_tpbuz_nm_2': 'Description'
    })
    df = df[df['AvgAmount'] > 0].dropna(subset=['AvgAmount']).drop_duplicates()

    # 2. 카테고리 매핑 (공백 제거 및 타입 강제 변환)
    category_map = {
        # 식사
        '한식': '식사',
        '중식': '식사',
        '양식': '식사',
        '일식': '식사',
        '분식': '식사',
        '고기요리': '식사',
        '닭/오리요리': '식사',
        '부페': '식사',
        '별식/퓨전요리': '식사',
        # 외식
        '패스트푸드': '외식',
        '제과/제빵/떡/케익': '외식',
        '커피/음료': '외식',
        # 쇼핑
        '패션잡화': '쇼핑',
        '가전제품': '쇼핑',
        '인터넷쇼핑': '쇼핑',
        '종합소매점': '쇼핑',
        # 생활구매
        '음/식료품소매': '생활구매',
        '인테리어/가정용품': '생활구매',
        '기타용품': '생활구매',
        '건강/기호식품': '생활구매',
        '화장품소매': '생활구매',
        '생활용품': '생활구매',
        # 의복
        '의복/의류': '의복',
        '신발': '의복',
        # 미용
        '미용서비스': '미용',
        # 생활
        '세탁/가사서비스': '생활',
        '사무/교육용품': '생활',
        '독서실/고시원': '생활',
        # 교통
        '버스': '교통',
        '지하철': '교통',
        '택시': '교통',
        '교통카드': '교통',
        # 차량
        '연료판賣': '차량',       # ※ 실제 데이터의 한자/오타 확인 필요 (예: '賣' → '매')
        '차량관리/서비스': '차량',
        '차량관리/부품': '차량',
        '차량판매': '차량',
        '휴게소/대형업체': '차량',
        # 교육
        '유아교육': '교육',
        '입시학원': '교육',
        '예체능계학원': '교육',
        '외국어학원': '교육',
        '기술/직업교육학원': '교육',
        # 의료
        '일반병원': '의료',
        '종합병원': '의료',
        '특화병원': '의료',
        '기타의료': '의료',
        '의약/의료품': '의료',
        '약국': '의료',
        # 여가
        '취미/오락': '여가',
        '스포츠/레져용품': '여가',
        '일반스포츠': '여가',
        # 문화
        '공연관람': '문화',
        '사우나/휴게시설': '문화',
        '유흥주점': '문화',
        '간이주점': '문화',
        # 여행
        '여행/유학대행': '여행',
        '숙박': '여행',
        # 업무
        '기업': '업무',
        '제조/도매': '업무',
        '공공기관': '업무',
        '보안/운송': '업무',
        '광고/인쇄/인화': '업무',
        '기타결제': '업무',
        '단체': '업무',
        '회비/공과금': '업무',
        '방문판매': '업무',
        # 기타
        '선물/완구': '기타',
        '유아용품': '기타',
        '악기/공예': '기타',
        '기타': '기타'
    }
    # ※ 실제 데이터의 카테고리명과 일치하는지 꼭 확인하세요.
    # 예: '연료판賣'는 '연료판매'로 수정해야 할 수 있음

    df['대표카테고리'] = df['Description'].map(lambda x: category_map.get(str(x).strip(), '기타'))

    # 3. 카테고리별 통계 추출 (공백/타입 이슈 해결)
    categories = [str(cat).strip() for cat in df['대표카테고리'].unique().tolist()]
    amount_stats = df.groupby('대표카테고리')['AvgAmount'].agg(['min', 'max', 'mean', 'std']).to_dict('index')
    amount_stats = {str(k).strip(): v for k, v in amount_stats.items()}

    return df, categories, amount_stats

# 테스트 코드 예시
if __name__ == "__main__":
    df = pd.read_csv('tbsh_gyeonggi_day_이천시.csv')
    df, categories, amount_stats = preprocess_data(df)
    print("카테고리별 통계:", amount_stats)
